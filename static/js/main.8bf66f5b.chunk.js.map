{"version":3,"sources":["components/main/main.module.scss","components/main/keypad/button/button.module.scss","components/main/display/display.module.scss","components/main/keypad/keypad.module.scss","components/main/main-helpers.ts","components/main/display/display.tsx","components/main/keypad/button/button.tsx","components/main/keypad/keypad.tsx","assets/dcmnLogo.png","components/main/main.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","calculate","valueL","operator","valueR","valueLeft","parseFloat","valueRight","Display","displayedValue","className","styles","displayContainer","aria-label","Button","value","size","clickHandler","color","buttonContainer","style","onClick","Keypad","numberHandler","operatorHandler","calculateHandler","clearHandler","decimalHandler","keypadContainer","React","memo","Main","useState","setDisplayedValue","currentValue","setCurrentValue","memoryValue","setMemoryValue","activeOperator","setActiveOperator","useEffect","mainContainer","src","logo","alt","dcmnLogo","valueOnDisplay","valueInMemory","match","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6FACAA,EAAOC,QAAU,CAAC,cAAgB,4BAA4B,SAAW,uBAAuB,aAAe,6B,gBCA/GD,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,SAAS,yB,iBCA7ED,EAAOC,QAAU,CAAC,iBAAmB,oC,gBCArCD,EAAOC,QAAU,CAAC,gBAAkB,kC,sICD7B,SAASC,EAAWC,EAAgBC,EAAkBC,GAC3D,IAAMC,EAAYC,WAAWJ,GACvBK,EAAaD,WAAWF,GAE9B,OAAQD,GACR,IAAM,IACJ,OAAOE,EAAYE,EACrB,IAAM,IACJ,OAAOF,EAAYE,G,2CCMRC,EARkB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,eAClC,OACE,qBAAKC,UAAWC,IAAOC,iBAAvB,SACE,oBAAIC,aAAW,UAAf,SAA0BJ,O,gCCMjBK,EANiB,SAAC,GAA+C,IAA7CC,EAA4C,EAA5CA,MAA4C,IAArCC,YAAqC,MAA9B,GAA8B,EAA1BC,EAA0B,EAA1BA,aAAcC,EAAY,EAAZA,MACjE,OACE,wBAAQR,UAAS,UAAKC,IAAOQ,gBAAZ,YAA+BR,IAAO,QAAUK,IAASI,MAAO,CAACF,SAAQG,QAAS,kBAAMJ,EAAaF,IAAtH,SAA+HA,KCC7HO,EAA0B,SAAC,GAAwF,IAAtFC,EAAqF,EAArFA,cAAeC,EAAsE,EAAtEA,gBAAiBC,EAAqD,EAArDA,iBAAkBC,EAAmC,EAAnCA,aAAcC,EAAqB,EAArBA,eACjG,OACE,sBAAKjB,UAAWC,IAAOiB,gBAAvB,UACE,cAAC,EAAD,CAAQb,MAAM,IAAIE,aAAcM,IAChC,cAAC,EAAD,CAAQR,MAAM,IAAIE,aAAcM,IAChC,cAAC,EAAD,CAAQR,MAAM,IAAIE,aAAcM,IAChC,cAAC,EAAD,CAAQR,MAAM,IAAIG,MAAO,UAAWD,aAAcO,IAClD,cAAC,EAAD,CAAQT,MAAM,IAAIE,aAAcM,IAChC,cAAC,EAAD,CAAQR,MAAM,IAAIE,aAAcM,IAChC,cAAC,EAAD,CAAQR,MAAM,IAAIE,aAAcM,IAChC,cAAC,EAAD,CAAQR,MAAM,IAAIG,MAAO,UAAWD,aAAcO,IAClD,cAAC,EAAD,CAAQT,MAAM,IAAIE,aAAcM,IAChC,cAAC,EAAD,CAAQR,MAAM,IAAIE,aAAcM,IAChC,cAAC,EAAD,CAAQR,MAAM,IAAIE,aAAcM,IAChC,cAAC,EAAD,CAAQR,MAAM,IAAIC,KAAK,IAAIE,MAAO,UAAWD,aAAcQ,IAC3D,cAAC,EAAD,CAAQV,MAAM,KAAKG,MAAO,UAAWD,aAAcS,IACnD,cAAC,EAAD,CAAQX,MAAM,IAAIE,aAAcM,IAChC,cAAC,EAAD,CAAQR,MAAM,IAAIG,MAAO,UAAWD,aAAcU,QAKzCE,MAAMC,KAAKR,GClCX,MAA0B,qCC8E1BS,EAvEQ,WACrB,MAA0CC,mBAAiB,KAA3D,mBAAKvB,EAAL,KAAqBwB,EAArB,KACA,EAAsCD,mBAAwB,MAA9D,mBAAKE,EAAL,KAAmBC,EAAnB,KACA,EAAoCH,mBAAiB,KAArD,mBAAKI,EAAL,KAAkBC,EAAlB,KACA,EAA0CL,mBAAiB,IAA3D,mBAAKM,EAAL,KAAqBC,EAArB,KAoDA,OAlDAC,qBAAU,WACa,OAAjBN,EACFD,EAAkBC,GACO,MAAhBE,GACTH,EAAkBG,KAEnB,CAACF,IA6CF,sBAAKxB,UAAWC,IAAO8B,cAAvB,UACE,qBAAKC,IAAKC,EAAMC,IAAI,YAAYlC,UAAWC,IAAOkC,WAClD,cAAC,EAAD,CAASpC,eAAgBA,IACzB,cAAC,EAAD,CACEc,cA/CN,SAA8BR,GAE1BoB,EADmB,OAAjBD,EACcnB,EAEA,SAAA+B,GAAc,OAAKA,EAAiB/B,KA4ClDS,gBAxCN,SAAgCT,GACzBuB,GAIHC,EAAkBxB,GACG,OAAjBmB,GACFG,GAAe,SAAAU,GAAa,MAAI,GAAK9C,EAAU8C,EAAeT,EAAgBJ,QAL5D,MAAhBE,GAAwC,OAAjBF,GAAuBG,EAAeH,GACjEK,EAAkBxB,IAQpBoB,EAAgB,OA8BZV,iBA3BN,WACMa,GAAmC,OAAjBJ,IACpBD,EAAkB,GAAKhC,EAAUmC,EAAaE,EAAgBJ,IAC9DK,EAAkB,IAClBF,EAAe,KACfF,EAAgB,QAuBdT,aAnBN,WACEO,EAAkB,KAClBE,EAAgB,MAChBE,EAAe,KACfE,EAAkB,KAgBdZ,eAbN,WACuB,OAAjBO,GAA0BA,EAAac,MAAM,OAAOb,GAAgB,SAAAD,GAAY,OAAIA,EAAe,cCjD5Fe,MARf,WACE,OACE,qBAAKvC,UAAU,MAAf,SACE,cAAC,EAAD,OCQSwC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8bf66f5b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"main_mainContainer__b45Om\",\"dcmnLogo\":\"main_dcmnLogo__p-BTi\",\"fadeInAndOut\":\"main_fadeInAndOut__216of\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonContainer\":\"button_buttonContainer__sgaWf\",\"size-2\":\"button_size-2__2aJHO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"displayContainer\":\"display_displayContainer__1NkCq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"keypadContainer\":\"keypad_keypadContainer__1siHq\"};","export function calculate (valueL: string, operator: string, valueR: string) {\n  const valueLeft = parseFloat(valueL);\n  const valueRight = parseFloat(valueR);\n\n  switch (operator) {\n  case ('+'):\n    return valueLeft + valueRight;\n  case ('-'):\n    return valueLeft - valueRight;\n  }\n}","import styles from './display.module.scss';\n\nexport interface Props {\n  displayedValue: string;\n}\n\nconst Display: React.FC<Props> = ({ displayedValue }) => {\n  return (\n    <div className={styles.displayContainer}>\n      <h2 aria-label='display'>{displayedValue}</h2>\n    </div>\n  );\n};\n\nexport default Display;","import styles from './button.module.scss';\n\nexport interface Props {\n  value: string;\n  clickHandler: (value: string) => void;\n  size?: string;\n  color?: string;\n}\n\nconst Button: React.FC<Props> = ({ value, size = '', clickHandler, color }) => {\n  return (\n    <button className={`${styles.buttonContainer} ${styles['size-' + size]}`} style={{color}} onClick={() => clickHandler(value)}>{value}</button>\n  );\n};\n\nexport default Button;","import styles from './keypad.module.scss';\nimport Button from './button/button';\nimport React from 'react';\n\nexport interface Props {\n  numberHandler: (value: string) => void;\n  operatorHandler: (value: string) => void;\n  calculateHandler: () => void;\n  clearHandler: () => void;\n  decimalHandler: () => void;\n}\n\nconst Keypad: React.FC<Props> = ({ numberHandler, operatorHandler, calculateHandler, clearHandler, decimalHandler }) => {\n  return (\n    <div className={styles.keypadContainer}>\n      <Button value='7' clickHandler={numberHandler}/>\n      <Button value='8' clickHandler={numberHandler}/>\n      <Button value='9' clickHandler={numberHandler}/>\n      <Button value='+' color={'#33e9c3'} clickHandler={operatorHandler}/>\n      <Button value='4' clickHandler={numberHandler}/>\n      <Button value='5' clickHandler={numberHandler}/>\n      <Button value='6' clickHandler={numberHandler}/>\n      <Button value='-' color={'#33e9c3'} clickHandler={operatorHandler}/>\n      <Button value='1' clickHandler={numberHandler}/>\n      <Button value='2' clickHandler={numberHandler}/>\n      <Button value='3' clickHandler={numberHandler}/>\n      <Button value='=' size='2' color={'#33e9c3'} clickHandler={calculateHandler}/>\n      <Button value='AC' color={'#e97778'} clickHandler={clearHandler}/>\n      <Button value='0' clickHandler={numberHandler}/>\n      <Button value='.' color={'#e97778'} clickHandler={decimalHandler}/>\n    </div>\n  );\n};\n\nexport default React.memo(Keypad);","export default __webpack_public_path__ + \"static/media/dcmnLogo.8bb0bb4d.png\";","import { useState, useEffect } from 'react';\nimport { calculate } from './main-helpers';\nimport styles from './main.module.scss';\nimport Display from 'components/main/display/display';\nimport Keypad from 'components/main/keypad/keypad';\nimport logo from 'assets/dcmnLogo.png';\n\nconst Main: React.FC = () => {\n  let [displayedValue, setDisplayedValue] = useState<string>('0');\n  let [currentValue, setCurrentValue] = useState<string | null>(null);\n  let [memoryValue, setMemoryValue] = useState<string>('0');\n  let [activeOperator, setActiveOperator] = useState<string>('');\n\n  useEffect(() => {\n    if (currentValue !== null) {\n      setDisplayedValue(currentValue);\n    } else if (memoryValue !== '0') {\n      setDisplayedValue(memoryValue);\n    }\n  }, [currentValue]);\n\n  function numberButtonHandler (value: string) {\n    if (currentValue === null) {\n      setCurrentValue(value);\n    } else {\n      setCurrentValue(valueOnDisplay =>  valueOnDisplay + value);\n    }\n  }\n\n  function operatorButtonHandler (value: string) {\n    if (!activeOperator) {\n      if (memoryValue === '0' && currentValue !== null) setMemoryValue(currentValue);\n      setActiveOperator(value);\n    } else {\n      setActiveOperator(value);\n      if (currentValue !== null) {\n        setMemoryValue(valueInMemory => '' + calculate(valueInMemory, activeOperator, currentValue!));\n      }\n    }\n\n    setCurrentValue(null);\n  }\n\n  function calculateButtonHandler () {\n    if (activeOperator && currentValue !== null) {\n      setDisplayedValue('' + calculate(memoryValue, activeOperator, currentValue!));\n      setActiveOperator('');\n      setMemoryValue('0');\n      setCurrentValue(null);\n    }\n  }\n\n  function clearButtonHandler () {\n    setDisplayedValue('0');\n    setCurrentValue(null);\n    setMemoryValue('0');\n    setActiveOperator('');\n  }\n\n  function decimalButtonHandler () {\n    if (currentValue !== null && !currentValue.match(/\\./)) setCurrentValue(currentValue => currentValue + '.');\n  }\n\n  return (\n    <div className={styles.mainContainer}>\n      <img src={logo} alt='DCMN logo' className={styles.dcmnLogo}></img>\n      <Display displayedValue={displayedValue}/>\n      <Keypad\n        numberHandler={numberButtonHandler}\n        operatorHandler={operatorButtonHandler}\n        calculateHandler={calculateButtonHandler}\n        clearHandler={clearButtonHandler}\n        decimalHandler={decimalButtonHandler}\n      />\n    </div>\n  );\n};\n\nexport default Main;","import './App.css';\nimport Main from 'components/main/main';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}